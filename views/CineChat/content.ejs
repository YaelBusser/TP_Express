<main>
    <div class="block-rooms-and-chat">
        <%- include('../Rooms/content.ejs') %>
        <main class="main-cine-chat">
            <section class="cine-chat">
                <ul id="messages"></ul>
                <form id="form">
                    <input id="input" autocomplete="off" placeholder="Envoyer un message dans #<%= room %>"/>
                    <button><i class="fa-solid fa-paper-plane"></i></button>
                </form>
            </section>
        </main>
    </div>
    <%- locals.username %>
    <script src="/socket.io/socket.io.js"></script>
    <script>

        document.addEventListener('DOMContentLoaded', function () {
            const socket = io();
            const messages = document.getElementById('messages');
            const form = document.getElementById('form');
            const input = document.getElementById('input');
            const username = '<%= username %>';
            const room = '<%= room %>';
            socket.emit('join room', room);
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                if (input.value.trim() !== '') {
                    const message = input.value;
                    socket.emit('chat message', {message});
                    input.value = '';
                }
            });
            socket.on('chat message', function (data) {
                const {message, userMessage, date} = data;

                const item = document.createElement('li');

                const blockInfoMessage = document.createElement('div')
                blockInfoMessage.className = 'block-info-message';

                const usernameElement = document.createElement('p');
                usernameElement.className = 'username-message';
                usernameElement.textContent = userMessage;

                const dateElement = document.createElement('p');
                dateElement.className = 'date-message';
                dateElement.textContent = date;

                const messageElement = document.createElement('p');
                messageElement.className = 'text-message';
                messageElement.textContent = message;

                let pictureElement;

                if (userMessage !== "Système") {
                    pictureElement = document.createElement('img');
                    pictureElement.className = 'img-sender';
                    pictureElement.src = "/images/profile-picture-default.png";
                }

                if (userMessage === "Système") {
                    item.className = 'message-system';
                } else {
                    item.className = username === userMessage ? 'user-message' : 'other-message';
                }

                messages.appendChild(item);

                item.appendChild(blockInfoMessage);
                if (userMessage !== "Système") {
                    blockInfoMessage.appendChild(pictureElement);
                }
                blockInfoMessage.appendChild(usernameElement);
                blockInfoMessage.appendChild(dateElement);

                item.appendChild(messageElement);

                messages.scrollTop = messages.scrollHeight;
            });
            socket.on('chat history', function (history) {
                history.forEach(function (data) {
                    const {message, userMessage, date} = data;

                    const item = document.createElement('li');

                    const blockInfoMessage = document.createElement('div')
                    blockInfoMessage.className = 'block-info-message';

                    const usernameElement = document.createElement('p');
                    usernameElement.className = 'username-message';
                    usernameElement.textContent = userMessage;

                    const dateElement = document.createElement('p');
                    dateElement.className = 'date-message';
                    dateElement.textContent = date;

                    const messageElement = document.createElement('p');
                    messageElement.className = 'text-message';
                    messageElement.textContent = message;

                    let pictureElement;

                    if (userMessage !== "Système") {
                        pictureElement = document.createElement('img');
                        pictureElement.className = 'img-sender';
                        pictureElement.src = "/images/profile-picture-default.png";
                    }

                    if (userMessage === "Système") {
                        item.className = 'message-system';
                    } else {
                        item.className = username === userMessage ? 'user-message' : 'other-message';
                    }

                    messages.appendChild(item);

                    item.appendChild(blockInfoMessage);
                    if (userMessage !== "Système") {
                        blockInfoMessage.appendChild(pictureElement);
                    }
                    blockInfoMessage.appendChild(usernameElement);
                    blockInfoMessage.appendChild(dateElement);

                    item.appendChild(messageElement);

                    messages.scrollTop = messages.scrollHeight;
                });
            });
            socket.emit('set username', username);
        });
    </script>
</main>